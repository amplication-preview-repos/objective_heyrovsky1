/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, StockMovement as PrismaStockMovement } from "@prisma/client";

export class StockMovementServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StockMovementCountArgs, "select">
  ): Promise<number> {
    return this.prisma.stockMovement.count(args);
  }

  async stockMovements(
    args: Prisma.StockMovementFindManyArgs
  ): Promise<PrismaStockMovement[]> {
    return this.prisma.stockMovement.findMany(args);
  }
  async stockMovement(
    args: Prisma.StockMovementFindUniqueArgs
  ): Promise<PrismaStockMovement | null> {
    return this.prisma.stockMovement.findUnique(args);
  }
  async createStockMovement(
    args: Prisma.StockMovementCreateArgs
  ): Promise<PrismaStockMovement> {
    return this.prisma.stockMovement.create(args);
  }
  async updateStockMovement(
    args: Prisma.StockMovementUpdateArgs
  ): Promise<PrismaStockMovement> {
    return this.prisma.stockMovement.update(args);
  }
  async deleteStockMovement(
    args: Prisma.StockMovementDeleteArgs
  ): Promise<PrismaStockMovement> {
    return this.prisma.stockMovement.delete(args);
  }
}
